var dbHelper = require('SQLiteHelper'),
    task = require('task'),
    basepath = require('basepath').mainpath,    

    //TODO: temporary fix until we rethink error handling
    errorPage = require(basepath + '/dynamic/error_pages/errorPage');


/*
 * Loads a task and calls the passed in callback function with the loaded task.
 *
 * request/response - request/response object
 * id - id of the task to load
 * callback parameters - (request, response, taskid, loadedTaskObj)
 */
module.exports.loadTask = function (request, response, id, callback) {
    dbHelper.getTask(id, function (callbackObj) {
        var loadRow;
        try {
            loadRow = callbackObj.rows[0]; // Always 0 because getTask only gets 1 row, namely the row with taskid = id
        } catch (error) { // If database isn't created yet
            errorPage.getReq(request, response, 500);
        }
        
        if (!loadRow) { // If loadRow is undefined, meaning task doesn't exist in db
            errorPage.getReq(request, response, 404);
        } else {
            var loadedTask = new task.task(loadRow.taskName, loadRow.description, loadRow.timeSpent,
                    loadRow.timeLeft, loadRow.priority, loadRow.progress, loadRow.status, loadRow.user);

            callback(request, response, id, loadedTask);
        }
    });
};
